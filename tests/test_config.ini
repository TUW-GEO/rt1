###############################################################################
# GENERAL SPECIFICATIONS
###############################################################################
[fits_kwargs]
# set dataset-properties (e.g. if the input-dataset is in dB or not)
sig0     = True
dB       = False
# define how the index of the results should be set (first, last or mean)
setindex = first
# indicator if interaction term should be evaluated
int_Q          = True
# backend to use for symbolic evaluation of the interaction term functions
lambda_backend = symengine
interp_vals     =   tau,   omega
_fnevals_input
# the verbosity (e.g. the level of print outputs)
verbose = 1

[least_squares_kwargs]
# keyword-arguments passed to scipy.optimize.least_squares
# level of print-output
verbose   = 0
# termination tolerances
ftol      = 1.e-4
gtol      = 1.e-4
xtol      = 1.e-4
# maximum number of function evaluations
max_nfev  = 20
# used minimization algorithm (trf or dogbox)
method    = trf
# method for solving the trust-regions (lsmr or exact)
tr_solver = lsmr
# characteristic scale of each variable (jac = use inverse norm of jacobian )
x_scale   = jac

###############################################################################
# RT1 MODEL SPECIFICATIONS
###############################################################################
[defdict]
# provide specifications in the following order:
# parameter = [fitQ, startval, frequency, min, max]
# fitQ     ... indicator if the parameter should be fitted or not
# startval ... the start-value to use if the parameter is fitted or the
#              constant value to use in case it is not fitted
# freqency ... the variability of the parameters specified as pandas dateoffset
#              https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects
# min/max  ... the boundary-values used in case the parameter is fitted

omega = [True, 0.05, 2M,    0.01, 0.5, True]
t_v   = [True, 0.25, None,  0.01, 0.5]
t_s   = [True, 0.25, None,  0.01, 0.5, False]
N     = [True, 0.1,  index, 0.01, 0.2]
tau   = [True, 0.5,  3M,    0.01, 1.5, True]
tau_multip = [False, 0.5]
bsf   = [True, 0.05, A,     0.01, 1.]


[RT1_V]
# the name of the volume-scattering function used (provided in rt1.volume)
V_name = HenyeyGreenstein
# parameter assignments
# ints and floats will be used as constants, strings will be converted
# to sympy expressions whose free-variables must be set in defdict.
tau    = tau * tau_multip
omega  = omega
t      = t_v
ncoefs = 10


[RT1_SRF]
# similar as RT1_V but this time the functions of rt1.surface will be used
SRF_name = HG_nadirnorm
NormBRDF = N
t        = t_s
ncoefs   = 10


[CONFIGFILES]

module__processing_cfg = tests/parallel_processing_config.py

[PROCESS_SPECS]

finalout_name = results.h5
dumpfolder = dump01
error_dumpfolder = ${PROCESS_SPECS:dumpfolder}

path__save_path = tests/proc_test


# add some additional values
float__f0 = 1245
float__f1 = 5.4
int__i0 = 1
int__i1 = 5
bool__b0 = False
bool__b1 = True

datetime__d0 = 23.3.2020 fmt=%d.%m.%Y
datetime__d1 = 22-1-17 12:34 fmt= %d-%m-%y %H:%M


list__float__lf = [.1  ,.2,  .3,.4,.5]
list__int__li = [1,  2,3,4,  5  ]
list__bool__lb = [True, False, 1, 0]
list__ls = [a,B  ,  c, AbCd#  ]
list__datetime__ldt = [22-1-17 12:34, 24-3-19 11:13]   fmt= %d-%m-%y %H:%M



